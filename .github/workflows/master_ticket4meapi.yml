# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App - ticket4meapi

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  sonar:
    name: Build and analyze Sonar
    runs-on: windows-latest

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' # Alternative distribution options are available.
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v3
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"willianmarcel_ticket4me" /o:"willianmarcel" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet run --project src/Ticket4me.Api/Ticket4me.Api.csproj --no-incremental
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
  build:
    name: Build and Push image to repository
    needs: [sonar]
    runs-on: 'ubuntu-latest'

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to registry
      uses: docker/login-action@v2
      with:
        registry: https://ticket4me.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_087bc340868c4f6d819839bba70dd0b2 }}
        password: ${{ secrets.AzureAppService_ContainerPassword_65f9717e0ce2496ca70838eb35f9eb08 }}

    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        context: ./src/
        push: true
        tags: ticket4me.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_087bc340868c4f6d819839bba70dd0b2 }}/ticket4me:${{ github.sha }}
        file: ./src/Ticket4me.Api/Dockerfile

  deploy:
    name: Deploy to Azure Web App
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'ticket4meapi'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_96cf8968d88a48729638e58a27aa0c64 }}
        images: 'ticket4me.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_087bc340868c4f6d819839bba70dd0b2 }}/ticket4me:${{ github.sha }}'
